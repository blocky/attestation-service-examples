name: On Prs

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
#  approve:
#    if: contains(github.event.pull_request.labels.*.name, 'auto-approve-me')
#    runs-on: ubuntu-latest
#    permissions:
#      pull-requests: write
#    steps:
#      - uses: hmarr/auto-approve-action@v3

  test-with-local-bky-server:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for OIDC
      contents: read  # Required to clone repo
    steps:
      - uses: actions/checkout@v4

      - name: Configure GitHub Authentication
        run: echo "${{ secrets.GH_ACCESS_TOKEN }}" | gh auth login --with-token

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          # Use the GH Actions role with limited permissions (i.e. read only access)
          # defined here https://github.com/blocky/atlantis-aws/blob/main/aws_iam.tf
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/BkyOidcGithubActionsBlocky
          aws-region: us-west-2

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './test/go.mod'

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-24.11

      - name: Run Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: |
          nix-shell \
            --pure \
            --argstr bkyAsVersion "latest" \
            --run "\
            AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
            AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
            AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN} \
            go test -C test . -count=1 -v -run=TestErrorHandlingAttestFnCall && \
            go test -C test . -count=1 -v -run=TestErrorHandlingOnChain && \
            go test -C test . -count=1 -v -run=TestHelloWorldAttestFnCall && \
            go test -C test . -count=1 -v -run=TestHelloWorldOnChain && \
            go test -C test . -count=1 -v -run=TestParamsAndSecrets && \
            go test -C test . -count=1 -v -run=HelloWorldOnChain && \
            go test -C test . -count=1 -v -run=TestRandom && \
            go test -C test . -count=1 -v -run=TestTime && \
            go test -C test . -count=1 -v -run=TestTWAPOnChain"
